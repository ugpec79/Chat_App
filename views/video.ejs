<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <div id="video-grid"></div>
    <button onclick="nonMuted()">Mute Audio</button>
    <button onclick="muteVideo()">Mute Video</button>
    <script src="https://unpkg.com/peerjs@1.3.2/dist/peerjs.min.js"></script>
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
    <script>
        var ROOM_ID="<%=roomId%>";
        var user_id="<%=userId%>";
        const socket = io()
const videoGrid = document.getElementById('video-grid')
const myPeer = new Peer(undefined, {
  
})
const myVideo = document.createElement('video')
myVideo.muted=true;
function mutedAudio(){
  myVideo.muted=true;
}
function nonMuted(){
  myVideo.muted=false;
}
function muteVideo(){
  video.srcObject=null;
  video.play();

}


const peers = {}

navigator.mediaDevices.getUserMedia({
  video: true,
  audio: true
}).then(stream => {
  addVideoStream(myVideo, stream)

  myPeer.on('call', call => {
    call.answer(stream)
    const video = document.createElement('video')
    call.on('stream', userVideoStream => {
      addVideoStream(video, userVideoStream)
    })
  })

  socket.on('user-connected', userId => {
    console.log(userId);
    connectToNewUser(userId, stream)
  })
})

socket.on('user-disconnected', (userId) => {
  if (peers[userId]) {peers[userId].close()}
})

myPeer.on('open', id => {
  //console.log(id);
  socket.emit('join-room', ROOM_ID, id,user_id)
})

function connectToNewUser(userId, stream) {
  const call = myPeer.call(userId, stream)
  const video = document.createElement('video')
  call.on('stream', userVideoStream => {
    addVideoStream(video, userVideoStream)
  })
  call.on('close', () => {
    video.remove()
  })

  peers[userId] = call

}

function addVideoStream(video, stream) {
  video.srcObject = stream
  video.addEventListener('loadedmetadata', () => {
    video.play()
  })
  videoGrid.append(video)
}
    </script>
</body>
</html>